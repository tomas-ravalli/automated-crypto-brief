import os
import smtplib
from email.message import EmailMessage
from coinbase.wallet.client import Client
from dotenv import load_dotenv

# Load environment variables from .env file
load_dotenv()

# --- Configuration ---
COINBASE_API_KEY = os.getenv("COINBASE_API_KEY")
COINBASE_API_SECRET = os.getenv("COINBASE_API_SECRET")
SENDER_EMAIL = os.getenv("GMAIL_ADDRESS")
SENDER_PASSWORD = os.getenv("GMAIL_APP_PASSWORD")
RECIPIENT_EMAIL = os.getenv("RECIPIENT_EMAIL")
CURRENCY_PAIR = 'XRP-EUR'
# Read purchase price from environment variables
PURCHASE_PRICE = float(os.getenv("PURCHASE_PRICE"))

def get_xrp_price():
    """Fetches the current XRP-EUR spot price from Coinbase."""
    try:
        client = Client(COINBASE_API_KEY, COINBASE_API_SECRET)
        price_data = client.get_spot_price(currency_pair=CURRENCY_PAIR)
        return float(price_data.amount)
    except Exception as e:
        print(f"Error fetching price: {e}")
        return None

def send_email(price):
    """Sends an email with the XRP price and performance."""
    if price is None or PURCHASE_PRICE is None:
        print("Skipping email due to missing price or purchase price configuration.")
        return

    # --- Calculations ---
    performance_pct = ((price - PURCHASE_PRICE) / PURCHASE_PRICE) * 100
    profit_per_unit = price - PURCHASE_PRICE

    # --- Email Content ---
    msg = EmailMessage()
    msg['Subject'] = 'Daily XRP-EUR Report'
    msg['From'] = SENDER_EMAIL
    msg['To'] = RECIPIENT_EMAIL
    
    # Create the HTML version of the email
    html_body = f"""
    <!DOCTYPE html>
    <html>
        <body style="font-family: sans-serif;">
            <p>Hello,</p>
            <p>
                Current Price: &euro;{price:,.2f}<br>
                Purchase Price: &euro;{PURCHASE_PRICE:,.2f}
            </p>
            <p>
                <strong>Profit/Loss per XRP:</strong> &euro;{profit_per_unit:,.2f}<br>
                <strong>Performance:</strong> {performance_pct:+.2f}%
            </p>
            <p><i>Report generated by my Python bot.</i></p>
            <p>&copy; &#127760; 2025 t.r.</p>
        </body>
    </html>
    """
    
    # Set the email content to be HTML
    msg.add_alternative(html_body, subtype='html')

    try:
        with smtplib.SMTP_SSL('smtp.gmail.com', 465) as smtp:
            smtp.login(SENDER_EMAIL, SENDER_PASSWORD)
            smtp.send_message(msg)
        print("Email sent successfully!")
    except Exception as e:
        print(f"Error sending email: {e}")

if __name__ == "__main__":
    current_price = get_xrp_price()
    send_email(current_price)
