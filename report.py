import os
import smtplib
from email.message import EmailMessage
from coinbase.wallet.client import Client
from dotenv import load_dotenv
from datetime import datetime

# Load environment variables from .env file
load_dotenv()

# --- Configuration ---
COINBASE_API_KEY = os.getenv("COINBASE_API_KEY")
COINBASE_API_SECRET = os.getenv("COINBASE_API_SECRET")
SENDER_EMAIL = os.getenv("GMAIL_ADDRESS")
SENDER_PASSWORD = os.getenv("GMAIL_APP_PASSWORD")
RECIPIENT_EMAIL = os.getenv("RECIPIENT_EMAIL")
CURRENCY_PAIR = 'XRP-EUR'

def get_xrp_price():
    """Fetches the current XRP-EUR spot price from Coinbase."""
    try:
        client = Client(COINBASE_API_KEY, COINBASE_API_SECRET)
        price_data = client.get_spot_price(currency_pair=CURRENCY_PAIR)
        return price_data.amount
    except Exception as e:
        print(f"Error fetching price: {e}")
        return None

def send_email(price):
    """Sends an email with the XRP price."""
    if price is None:
        print("Skipping email due to price fetch error.")
        return

    msg = EmailMessage()
    today_str = datetime.now().strftime("%Y-%m-%d")
    msg['Subject'] = f'Weekly XRP-EUR Report: {today_str}'
    msg['From'] = SENDER_EMAIL
    msg['To'] = RECIPIENT_EMAIL
    msg.set_content(f"Hello,\n\nThe current price for {CURRENCY_PAIR} is â‚¬{price}.\n\nReport generated by your Python bot.")

    try:
        with smtplib.SMTP_SSL('smtp.gmail.com', 465) as smtp:
            smtp.login(SENDER_EMAIL, SENDER_PASSWORD)
            smtp.send_message(msg)
        print("Email sent successfully!")
    except Exception as e:
        print(f"Error sending email: {e}")

if __name__ == "__main__":
    current_price = get_xrp_price()
    send_email(current_price)